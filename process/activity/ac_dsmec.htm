<!-- RPW META DATA START --
 
 


-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Activity:&nbsp;Identify Design Mechanisms</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Activity:&nbsp;<rpw name="PresentationName">Identify Design Mechanisms</rpw><a name="Top"></a></h2>
<div align="left">

<table border="1" width="85%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td colspan="2"><b>Purpose</b>
    <ul>
      <li><a name="XE_class__refining_analysis_classes"></a>To refine the analysis mechanisms into design mechanisms based on the 
        constraints imposed by the implementation environment.</li>
    </ul>
    </td>
  </tr>
  <tr>
    <td colspan="2"><b>Steps</b>
    <ul>
      <li><a href="#categorize clients">Categorize Clients of Analysis
        Mechanisms</a></li>
      <li><a href="#inventory impl mechanisms">Inventory the Implementation
        Mechanisms</a></li>
      <li><a href="#Map Design Mechanisms to Implementation Mechanisms">Map
        Design Mechanisms to Implementation Mechanisms</a></li>
      <li><a href="#document mechanisms">Document Architectural Mechanisms</a></li>
    </ul>
    </td>
  </tr>
  <tr>
    <td width="50%"><b>Input Artifacts:&nbsp;</b>
	  <ul>
<li><a href="../artifact/ar_aclss.htm">Analysis Class</a></li>
<li><a href="../artifact/ar_desmd.htm">Design Model</a></li>
<li><a href="../artifact/ar_sadoc.htm">Software Architecture Document</a></li>
<li><a href="../artifact/ar_sspec.htm">Supplementary Specifications</a></li>
</ul>
&nbsp;
	</td>
    <td><b>Resulting Artifacts:&nbsp;</b>
	  <ul>
<li><a href="../artifact/ar_class.htm">Design Class</a></li>
<li><a href="../artifact/ar_desmd.htm">Design Model</a></li>
<li><a href="../artifact/ar_despk.htm">Design Package</a></li>
<li><a href="../artifact/ar_dsub.htm">Design Subsystem</a></li>
<li><a href="../artifact/ar_sadoc.htm">Software Architecture Document</a></li>
</ul>
&nbsp;
	</td>
  </tr>
  <tr>
    <td colspan="2"><b>Frequency:&nbsp;</b>Once per iteration&nbsp;</td>
  </tr>
  <tr>
    <td  colspan="2"><b>Role:&nbsp;</b>
	  <a href="../workers/wk_archt.htm">Software Architect</a>&nbsp;
	</td>
  </tr>
  <tr>
    <td colspan="2"><b>Tool Mentors:&nbsp;</b>
      <ul>
<li><a href="../../toolment/xde_vsnet/tm_dsmec.htm">Identifying Design Mechanisms Using Rational XDE Developer - .NET Edition</a></li>
<li><a href="../../toolment/xde_eclipse/tm_dsmec.htm">Identifying Design Mechanisms Using Rational XDE Developer - Java Platform Edition</a></li>
<li><a href="../../toolment/rose/tm_desmd.htm">Managing the Design Model Using Rational Rose</a></li>
</ul>
&nbsp;
    </td>
  </tr>
    <tr>
    <td colspan="2"> <b>More Information:&nbsp;</b><ul>
<li><a href="../workflow/ana_desi/co_amech.htm">Concept: Analysis Mechanisms</a></li>
<li><a href="../workflow/ana_desi/co_dmech.htm">Concept: Design and Implementation Mechanisms</a></li>
</ul>
</td>
    </tr>
</table>
<!-- Linked to Workflow Begin -->
<p></p>
<table border="1" width="85%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td colspan="2"><b>Workflow Details:&nbsp;</b>
      <ul>
<li><a href="../workflow/ovu_and.htm">Analysis & Design</a>
<ul>
<li><a href="../workflow/ana_desi/wfs_and2.htm">Refine the Architecture</a></li>
</ul>
</li>
</ul>
&nbsp;
	</td>
  </tr>
</table>
<!-- Linked to Workflow End -->
</div>

<h3><a name="XE_analysis_mechanisms__categorizing"></a><a name="categorize clients">Categorize
Clients of Analysis Mechanisms</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Analysis mechanisms provide conceptual sets of services which are used by <a href="../artifact/ar_aclss.htm">Analysis
Classes</a>. They offer a convenient short-hand for fairly complex
behaviors which will ultimately have to be worried about, but which are out of
scope for the analysis effort. Their main purpose is to allow us to capture the
requirements on these yet-to-be designed services of the system without having
to be concerned about the details of the service provider itself.</p>
<p>Now we must begin the refine the information gathered on the analysis
mechanisms. The steps for doing this are as follows:</p>
<p><b>Identify the clients of each analysis mechanism. </b>Scan all
clients of a given analysis mechanism, looking at the characteristics they
require for that mechanism. For example, a number of <a href="../artifact/ar_aclss.htm">Analysis
Classes</a> may make
use of a Persistence mechanism, but their requirements on this may widely vary:
a class which will have a thousand persistent instances has significantly
different persistence requirements than a class which will have four million
persistent instances. Similarly, a class whose instances must provide
sub-millisecond response to instance data will require a different persistence
approach than a class whose instance data is only accessed through ad-hoc
queries and batch reporting applications.</p>
<p><b>Identify characteristic profiles for each analysis mechanism</b>.
There may be widely varying <b>characteristics profiles</b>, providing
varying degrees of performance, footprint, security, economic cost, etc. Each
analysis mechanism is different - different characteristics will apply to each.
Many mechanisms will require estimates of the number of instances to be managed,
and their expected size in terms of the expected number of bytes. The movement
of large amounts of data through any system will create tremendous performance
issues which must be dealt with.</p>
<p><b>Group clients according to their use of characteristic profiles.</b>
Form groups of clients that seem to share a need for an analysis mechanism with
a similar characteristics profile; identify a design mechanism based on each
such need. These groupings provide an initial cut at the design mechanisms. An
example analysis mechanism, &quot;inter-process communication&quot;, may map
onto a design mechanism &quot;object request broker&quot;. Different
characteristic profiles will lead to different design mechanisms which emerge
from the same analysis mechanism. The simple persistence mechanism in analysis
will give rise to a number of persistence mechanisms in design: in-memory
persistence, file-based, database-based, distributed, etc. The design mechanisms
are refinements of the analysis mechanisms, based on different characteristic
profiles.</p>



<h3><a name="XE_implementation_mechanism__inventorying"></a><a name="inventory impl mechanisms">Inventory
the Implementation Mechanisms</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Proceed bottom-up and make an inventory of the implementation mechanisms (see
<a href="../workflow/ana_desi/co_dmech.htm">Concepts: Design and Implementation
Mechanisms</a>) that you have at your disposal:
<ul>
  <li>Mechanisms offered by a middleware product or component framework.</li>
  <li>Mechanisms offered by operating systems.</li>
  <li>Mechanisms offered by a component.</li>
  <li>Mechanisms offered by a class library.</li>
  <li>Legacy code (see also <a href="ac_incds.htm">Activity: Incorporate Existing 
    Design Elements</a>)</li>
  <li>Special purpose packages: GUI builder, Geographical Information System, 
    DBMS, etc.</li>
</ul>
<p>Determine where existing implementation mechanisms can be used and where new
implementation mechanisms need to be built.</p>
<h3><a name="XE_implementation_mechanism__mapping_from_design_mechanisms"></a><a name="XE_design_mechanism__mapping_to_implementation_mechanisms"></a><a name="Map Design Mechanisms to Implementation Mechanisms">Map
Design Mechanisms to Implementation Mechanisms</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Design mechanisms provide an abstraction of the implementation mechanisms,
bridging the gap between Analysis Mechanisms and Implementation Mechanisms. The
use of abstract architectural mechanisms during design allows us to consider how
we are going to provide architectural mechanisms without obscuring the
problem-at-hand with the details of a particular mechanism. It also allows us to
potentially substitute one specific implementation mechanism for another without
adversely affecting the design.</p>
<p><b>Determine the ranges of characteristics. </b>Take the
characteristics identified for the design mechanisms to determine reasonable, economical,
or feasible ranges of values to use in the candidate-implementation mechanism.</p>
<p><b>Consider the cost of acquisition for purchased components</b>.
For candidate implementation mechanisms, consider the cost of acquisition or
licensing, the maturity of the product, relationship with the vendor, support,
etc. in addition to purely technical criteria.</p>
<p><b>Conduct a search for the right components, or build the components. </b>You
will often find that there is no apparently suitable implementation mechanism
for some design mechanisms; this will trigger a search for the right product, or
identify the need for in-house development. You may also find that some
implementation mechanisms are not used at all.<br>
<br>
The choice of implementation mechanisms is based not only on a good match for
the technical characteristics, but also on the non-technical characteristics,
such as cost. Some of the choices may be <b>provisional</b>; almost
all have some risks attached to them: performance, robustness, and scalability
are nearly always concerns and must be validated by evaluation, exploratory
prototyping, or inclusion in the architectural prototype.</p>
<h3><a name="XE_architectural_mechanism__documenting"></a><a name="document mechanisms">Document
Architectural Mechanisms</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The role of the Software Architect in this activity is to decide upon and validate 
  these mechanisms by building, or integrating them, and verifying that they do 
  the job, then consistently impose them upon the rest of the system design. The 
  software architect role collaborates with the process engineer role to document 
  the mechanisms and details regarding their use in project-specific design guidelines. 
  
  See <a href="ac_dvlprjspcgdl.htm">Activity: Prepare Project Specific Guidelines</a>. 
  
  The relationship (or mapping) of analysis mechanisms to design mechanisms to 
  implementation mechanisms, and the associated rationale for these choices, should 
  be documented in the <a href="../artifact/ar_sadoc.htm">Software Architecture 
  Document</a>. The mechanisms themselves are Design Model elements (such as Design 
  Package, Design Class, and Design Subsystem) which are detailed in <a href="../artifact/ar_desmd.htm">Artifact: 
  Design Model</a> as part of their respective design activities.</p>
<br>
  <br>
    
  
<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table> 
   
   
</body>

</html>