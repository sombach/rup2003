<!-- RPW META DATA START --
 
 

-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Activity:&nbsp;Define Project Organization and Staffing</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner"><a name="Top"></a>Activity:&nbsp;<rpw name="PresentationName">Define Project 
  Organization and Staffing</rpw></h2>
<div align="left">

<table border="1" width="85%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td colspan="2"><b>Purpose</b>
    <ul>
      <li>To define an organizational structure for the project</li>
      <li>Based on effort estimates, to define staffing requirements - in terms
        of numbers, types and experience levels - for the next iteration (with
        high confidence), and for subsequent iterations, although with lower
        confidence, to allow action to begin on staff acquisition, if this is a
        risk</li>
    </ul>
    </td>
  </tr>
  <tr>
    <td colspan="2"><b>Steps</b>
    <ul>
      <li><a href="#Define Project Organization">Define Project Organization</a></li>
      <li><a href="#Define Staffing Requirements">Define Staffing Requirements</a></li>
    </ul>
    </td>
  </tr>
  <tr>
    <td width="50%"><b>Input Artifacts:&nbsp;</b>
	  <ul>
<li><a href="../artifact/ar_bcase.htm">Business Case</a></li>
<li><a href="../artifact/ar_rskls.htm">Risk List</a></li>
<li><a href="../artifact/ar_vsion.htm">Vision</a></li>
</ul>
&nbsp;
	</td>
    <td width="50%"><b>Resulting Artifacts:&nbsp;</b>
	  <ul>
<li><a href="../artifact/ar_sdp.htm">Software Development Plan</a></li>
</ul>
&nbsp;
	</td>
  </tr>
  <tr>
    <td colspan="2"><b>Frequency:&nbsp;</b>Once per iteration&nbsp;</td>
  </tr>
  <tr>
    <td colspan="2"><b>Role:&nbsp;</b>
	  <a href="../workers/wk_projm.htm">Project Manager</a>&nbsp;
	</td>
  </tr>
  <!-- Activity Tool Mentors -->
  <tr> 
    <td colspan="2"><b>Tool Mentors:&nbsp;</b>
	   &nbsp;
	</td>
  </tr>
    
</table>
<!-- Linked to Workflow Begin -->
<p></p>
<table border="1" width="85%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td colspan="2"><b>Workflow Details:&nbsp;</b>
	  <ul>
<li><a href="../workflow/ovu_mgm.htm">Project Management</a>
<ul>
<li><a href="../workflow/manageme/wfs_sdp.htm">Plan the Project</a></li>
</ul>
</li>
</ul>
&nbsp;
	</td>
  </tr>
</table>
<!-- Linked to Workflow End -->
</div>

<h3><a name="Define Project Organization">Define Project Organization</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<div align="left">

<table border="1" width="92%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td width="5%"><b>Purpose</b></td>
    <td width="95%">To define the organizational structure of the project in terms of positions, teams, responsibilities and hierarchy.&nbsp;</td>
  </tr>
</table>
<br>
</div>

<p>The choice of project organizational structure depends on the characteristics
of the project, and external constraints, such as existing organizational
policy. It is, therefore, difficult to be prescriptive about such structures,
because what is effective (or even feasible) will depend very much on
circumstance.  
The issues to be addressed are canvassed in <a href="../modguide/md_prpln.htm">Guidelines:
Project Plan</a>, which also present a default project structure that may be
adapted to a project's particular needs. The default structure also suggests a
mapping of (Rational Unified Process) roles to the organization's positions.
The shape and size of the project organization will vary across phases, and the
Software Development Plan, a living document, will be updated to reflect these
changes.</p>
<h3><a name="Define Staffing Requirements">Define Staffing Requirements</a><a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<div align="left">

<table border="1" width="92%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td width="5%"><b>Purpose</b></td>
	<td width="95%">To define the numbers, type (skills, domain), experience and caliber of staff required for the project&nbsp;</td>
  </tr>
</table>
<br>
</div>

<p>Based on the effort estimates for the project, the desired schedule, the
chosen organizational structure and mapping of roles, the Project Manager
determines the staffing profile (number of staff over time, and skill set)
required for the project. The effort estimate for a project is of course not
independent of team size, experience, skills and caliber - in all probability,
the Project Manager will have made assumptions about staff capability, etc. when
forming the effort estimate. In the <a href="http://sunset.usc.edu/research/COCOMOII/index.html" target="_blank">COCOMO
estimation model</a> (see <a href="ac_plph.htm#Estimate Project">Activity: Plan
Phases and Iterations</a>), staff capability and experience are major effort
drivers. Therefore, selecting an acceptable total effort (by tuning the various
COCOMO effort drivers) and a feasible schedule will determine the staff
profile.</p>
<p>In some cases, the Project Manager may know in advance the numbers and skills
of staff that will be available.&nbsp; In these cases, with the staff size and
skills set, only the schedule is variable, assuming the project scope stays
constant.</p>
<p>The Project Manager must also be aware of the disruption that may be caused
by ramping up staff levels too rapidly, and the potentially catastrophic effect
on productivity of attempting radical reductions in schedule, by large increases
in staff numbers.</p>
<h4><a name="Inception and Elaboration">Staffing the Inception and Elaboration
Phases</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h4>
<p>During Inception, the focus is on defining and bounding the scope, and
developing a business case for the project. Consequently, the team size is quite
small: a Project Manager, a Software Architect, and perhaps a developer or two,
especially where a proof of concept prototype is needed to clarify the
requirements or build support for the product.</p>
<p>During Elaboration, the focus is primarily on the architecture and the
architectural prototype. Consequently, design activities in early elaboration
focus on the architectural aspects; little attention is given to the details of
the classes and their attributes, which although identified are not
architecturally significant. During these iterations, most of the effort comes
from your architecture team and a designated prototyping team. The prototyping
team is usually put together by the more experienced programmers. At this point
you have a very small design team that will focus on generic mechanisms and
technologies. The test group will focus on building the test environment and
testing the early use cases.</p>
<p>The choice of members of the architecture team should be made carefully: they
should not only possess superior analysis and design skills, but also leadership
qualities. In order to communicate the architecture to the larger team during
the construction phase, a good practice is to distribute the members of the
architecture team among the Construction teams. Members of the architecture team
also need to cover a broad spectrum of software engineering experience: software
design and implementation, performance tuning, database management, network
management and configuration management include the major skill sets that must
be represented in the architecture team.</p>
<h4><a name="Construction">Staffing the Construction Phase</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h4>
<p>The Construction Phase focuses on maintaining the architectural integrity of
the system while building increasing functionality into the system. This
requires architectural refinement (hence the &quot;baselining&quot; and not
&quot;freezing&quot; of the architecture following the Elaboration Phase) and an
architecture team that keeps an eye on the designers and their designs.</p>
<p>The architecture team will tend to distribute itself among the development
teams, acting as technical leads and coordinating inter-group issues with the
other technical leads. The Construction teams themselves must be
cross-functional teams with both design and development expertise, as they are
responsible for both the design and implementation of their assigned
functionality. Typically, a Construction team is responsible for one or more
subsystems with well-defined interfaces; changes to these interfaces or the
addition of new subsystems causes architectural change and needs to be carefully
considered. Within the subsystem, the team is relatively free to design and
implement as it sees fit, but cross-team communication is needed to ensure that
teams are not building the same implementation mechanisms in parallel.</p>
<p>Typically, Construction teams are usually organized horizontally, along the
lines of layering. A team may be responsible for database interfaces, or
communication infrastructure, while other teams focus on the application
functionality itself. The &quot;upper&quot; layer teams as a result require more
expertise in the problem domain and with User Interface design or interfacing
with external systems. &quot;Lower&quot; layer teams are more intimate with the
implementation technology. The composition of these teams must reflect these
different skill demands.</p>
<h4><a name="Testing">Staffing Testing Activities</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h4>
<p>The first question in test is how much formal testing are you required to do?
And then, how much of this can you afford to do to meet your quality objectives
and still be within reasonable limits from a cost and schedule perspective. It
is rare that projects have the budget to do all kind of tests. Typically,
projects must select a test level they can afford. Remember, each test
specification must be inspected and maintained. It is very bad for project team
morale if there are plans to create a lot of test specifications, but cannot
implement those plans because you run out of time.</p>
<p>Create a specific test team. At least one person in the test team must come
from the requirements capture team. The test team is responsible for
<ul>
  <li><b>Black-box testing.</b> Test the use cases from outside the
    system on the basis of the use case's flow of events (see <a href="../artifact/ar_uc.htm">Artifact:
    Use Case</a>).</li>
  <li><b>White-box testing.</b> Test the actual sending of messages in
    the use case on the basis of the sequence views for the scenarios.</li>
  <li><b>System test.</b> Stressing the system to reveal its true
    nature.</li>
</ul>
<p>Remember that testing is not just to run the tests - it is also to prepare
the test environment and to write and inspect the test specifications.</p>
<p>An independent group should test the use cases and the entire system. They
should perform the tests and write the test reports as well. The work of testing
the use cases should be organized so that there is one individual responsible
for testing each use case.</p>
<p>If it is not possible for an independent group to test the use cases, as on a
small project, you should at least make sure that the person responsible for a
use case in design does not test the use case.</p>
<p>Automated regression testing should be used on medium and large projects. The
test team will require some programmers to support this capability. This is even
more important during an iterative development, where you do not want to expend
a lot of effort re-running the same test suites again and again.</p>
<h4><a name="Transition">Staffing the Transition Phase</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h4>
<p>In the Transition Phase, development work is completed. Beta testing is
conducted, and a final release is prepared. If a good job has been done in
Construction, the project team can begin scaling back in size, reducing the
number of developers and testers. The mix of the team will shift in favor of
trainers and infrastructure logistics experts who are responsible for deploying
the product into the user community.</p>
<p>The software architect, or architecture team, works in a &quot;follow up mode&quot;:
they help sort out problem reports, prioritize change proposals, and change
orders to make sure that problems are not fixed for the sake of expediency in a
way that damages the architecture. Design activities recede during the
transition phase, and are limited to correcting problems, or introducing last
minute enhancements.</p><br>
<br>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>