<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Artifact:&nbsp;Event</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Artifact:&nbsp;<rpw name="PresentationName">Event</rpw><a name="XE_event__as_artifact"></a><a name="Top"></a></h2>
<div align="left">
<table border="1" width="100%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolorlight="#808080" bordercolordark="#808080">
  <tbody valign="top">
    <tr>
      <td width="20%" valign="middle" align="center">
	    <img src="images/ar_event.jpg" width="45" height="28">&nbsp;
	  </td>
      <td width="80%">The specification of an occurrence in space and time; less 
        formally, an occurrence of something to which the system must respond.&nbsp; 
        The purpose of this Artifact: Event is to capture characteristics of events, 
        such as frequency, priority, and response requirements.</td>
    </tr>
	
    <tr><th width="20%" align="left">
	 Other Relationships:&nbsp;</th><td width="80%">
Part Of <a href="ar_desmd.htm">Design Model</a>

<br>
</td></tr>
    <tr>
      <th width="20%" align="left">Role:&nbsp;</th>
      <td width="80%"><a href="../workers/wk_archt.htm">Software Architect</a>&nbsp;</td>
    </tr>
    <tr>
      <th width="20%" align="left">Optionality/Occurrence:&nbsp;</th>
      <td width="80%">Identifying and characterizing events is mainly applicable 
        to reactive (event-driven) systems, systems that use concurrency, and/or 
        systems that use asynchronous messaging.</td>
    </tr>
    <tr>
      <th width="20%" align="left">Templates and Reports:&nbsp;</th>
      <td width="80%">
	    <!-- <ul> -->
          <br>
          &nbsp;
	    <!-- <ul> -->
      </td>
    </tr>
    <tr>
      <th width="20%" align="left">Examples:&nbsp;</th>
      <td width="80%">&nbsp;</td>
    </tr>
    <tr>
      <th width="20%" align="left">UML Representation:&nbsp;</th>
      <td width="80%">
        <p>In the context of state and activity diagrams, Event refers to a trigger 
          for a state transition.</p>
        <p>However, this artifact covers &quot;event&quot; in the more general 
          sense, as occurrences to which the system must respond, including signals, 
          calls, state changes, or time events.</p>
        <p>Also see <a href="ar_signa.htm">Artifact: Signal</a>.</p>
        </td>
    </tr>
    <tr>
      <th width="20%" align="left">More Information:&nbsp;</th>
      <td width="80%">&nbsp;</td>
    </tr>
    <tr>
      <th colspan="2" align="left">
        <ul>
          <li><a href="#Purpose">Purpose</a></li>
          <li><a href="#Timing">Timing</a></li>
          <li><a href="#Responsibility">Responsibility</a></li>
          <li><a href="#Tailoring">Tailoring</a></li>
        </ul>
      </th>
    </tr>
  </tbody>
</table>

<!-- Input_Output Activity Begin -->
<table border="1" width="100%" cellspacing="0" cellpadding="4" style="border: 1px solid rgb(128,128,128)" bordercolor="#808080" bordercolorlight="#808080" bordercolordark="#808080">
 <tbody valign="top">
  <tr>
    <td width="50%"><b>Input to Activities:&nbsp;</b> 
      <ul>
<li><a href="../activity/ac_cpdes.htm">Capsule Design</a></li>
<li><a href="../activity/ac_cldes.htm">Class Design</a></li>
</ul>
&nbsp;
	</td>
    <td width="50%"><b>Output from Activities:&nbsp;</b> 
      <ul>
<li><a href="../activity/ac_iddes.htm">Identify Design Elements</a></li>
</ul>
&nbsp;
	</td>
  </tr>
 </tbody>
</table>
<!-- Input_Output Activity End -->
<br>
</div>


<h3><a name="XE_event__purpose_of"></a><a name="Purpose">Purpose</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>An event is used to identify and capture information about external occurrences 
  that the system is aware of and to which it must respond. Events can also be 
  used to capture information about internal events, such as exceptions.</p>
<h3><a name="Brief Outline">Brief Outline</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Important characteristics of events are:</p>
<ul>
  <li>internal vs. external - Is the event external or internal?</li>
  <li>priority - Does this event need to cause the suspension of other processing 
    in order to be handled?</li>
  <li>frequency - How often does the event occur?</li>
  <li>frequency distribution - Does the event occur at regular intervals, or are 
    there spikes?</li>
  <li>response requirements - How the quickly the system must respond to the event 
    (may need to distinguish between average and worst case).</li>
  <li>kind - Is this a Call Event, Time Event, Signal Event, or Change Event (see 
    <a href="../workflow/ana_desi/co_event.htm">Concepts: Events and Signals</a> 
    for definitions)?<br>
  </li>
</ul>
  <h3><a name="Timing">Timing</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Some events, specifically those representing the external events and the significant 
  internal events to which the system must respond, are identified early in the 
  elaboration phase. Other events needed to communicate asynchronously within 
  the system are identified in the latter part of the elaboration phase. All architecturally 
  significant events should be completely identified by the end of the elaboration 
  phase.</p>
<h3><a name="Responsibility">Responsibility</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The software architect is responsible for all events, ensuring that events are being
used appropriately.</p>
<h3><a name="Tailoring">Tailoring</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Event characteristics can be captured in a spreadsheet, database, requirements 
  management database, or as a table in the Software Architecture Document.</p>
<p>They can even be captured as classes, stereotyped &laquo;event&raquo;, although 
  this should be treated as a convenient way of capturing management information 
  about events, and not be confused with data transmitted when the event occurs. 
  If a call event results in the transmission of data, the data should be represented 
  by the signature of the called operation. If the event is a signal, its data 
  can be modeled explicitly (see <a href="ar_signa.htm">Artifact: Signal</a>).</p>
<br><br>

 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>