<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../../rop.css" type="text/css">
<title>Concepts:&nbsp;Organizational Context for the Rational Unified Process</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Concepts:&nbsp;<rpw name="PresentationName">Organizational Context for the Rational Unified Process</rpw><a name="Top"></a></h2>
<h5>Topics</h5>
<ul>
  <li><a href="#Introduction">Introduction</a></li>
  <li><a href="#The Software Engineering Process Authority (SEPA)">The Software
    Engineering Process Authority (SEPA)</a></li>
  <li><a href="#The Project Review Authority (PRA)">The Project Review Authority
    (PRA)</a></li>
  <li><a href="#The Software Engineering Environment Authority (SEEA)">The
    Software Engineering Environment Authority (SEEA)</a></li>
  <li><a href="#Infrastructure">Infrastructure</a></li>
</ul>
<h3><a name="Introduction">Introduction </a><a href="#Top"><img src="../../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Projects do not run in isolation, they rely on care and feeding from their
supporting organizations. The nature of that support is characterized in the
following sections. The Rational Unified Process (RUP) assumes that the kinds of
services described here will be available from outside the project and that in
any organization there will exist some equivalent capability to provide them,
but does not prescribe the structure or operation of these entities. The
following descriptions are taken from [<a href="../../referenc.htm#ROY98">ROY98</a>]
(q.v.).</p>
<h3><a name="The Software Engineering Process Authority (SEPA)">The Software
Engineering Process Authority (SEPA)</a> <a href="#Top"><img src="../../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The Software Engineering Process Authority (SEPA) facilitates the exchange of
information and process guidance both to and from project practitioners. This
role is accountable to the organization general manager for maintaining a
current assessment of the organization's process maturity and its plan for
future process improvements. The SEPA must help initiate and periodically assess
project processes. Catalyzing the capture and dissemination of software best
practices can be accomplished only when the SEPA understands both the desired
improvement and the project context. The SEPA is a necessary role in any
organization. It takes on responsibility and accountability for the process
definition and its maintenance (modification, improvement, technology
insertion). The SEPA could be a single individual, the general manager, or even
a team of representatives. The SEPA must truly be an authority, competent and
powerful, not a staff position rendered impotent by ineffective bureaucracy.</p>
<h3><a name="The Project Review Authority (PRA)">The Project Review Authority
(PRA)</a> <a href="#Top"><img src="../../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The Project Review Authority (PRA) is the organizational entity responsible for
ensuring that a software project complies with all organizational and business
unit software policies, practices, and standards. A software project manager is
responsible for meeting the requirements of a contract or some other project
compliance standard, and is also accountable to the PRA. The PRA reviews the
project's conformance to contractual obligations and the project's
organizational policy obligations. The customer monitors contract requirements,
contract milestones, contract deliverables, monthly management reviews,
progress, quality, cost, schedule, and risk. The PRA reviews customer
commitments as well as adherence to organizational policies, organizational
deliverables, financial performance, and other risks and accomplishments. It is
recommended that a single individual be nominated as the PRA; that individual
may delegate the work of monitoring and review as required, and meetings in
which the PRA engages may require the support of others from the development
organization's executive management team, so that, at least for the duration of
the meeting, the PRA appears as a team of people. <b>It is strongly recommended
however that ultimate authority for performance should rest with an individual,
who calls for support as needed.</b></p>
<h3><a name="The Software Engineering Environment Authority (SEEA)">The Software
Engineering Environment Authority (SEEA)</a> <a href="#Top"><img src="../../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The Software Engineering Environment Authority (SEEA) is responsible for
automating the organization's process, maintaining the organization's standard
environment, training projects to use the environment, and maintaining
organization-wide reusable assets. The SEEA role is necessary to achieve a
significant return on investment for a common process. Tools, techniques, and
training can be amortized effectively across multiple projects only if someone
in the organization (the SEEA) is responsible for supporting and administering a
standard environment. In many cases, the environment may be augmented,
customized, or modified, but the existence of an 80% default solution for each
project is critical to achieving institutionalization of the organization's
process and a good ROI on capital tool investments.</p>
<h3><a name="Infrastructure">Infrastructure</a> <a href="#Top"><img src="../../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>An organization's infrastructure provides human resources support,
project-independent research and development, and other capital software
engineering assets. The infrastructure for any given software line of business
can range from trivial to highly entrenched bureaucracies. The typical
components of the organizational infrastructure are as follows:
<ul>
  <li>Project administration: time accounting system; contracts, pricing, terms
    and conditions; corporate information systems integration</li>
  <li>Engineering skill centers: custom tools repository and maintenance, bid
    and proposal support, independent research and development</li>
  <li>Professional development: internal training boot camp, personnel
    recruiting, personnel skills database maintenance, literature and assets
    library, technical publications.</li>
</ul>
<br>
<br>


 

<p>
 <font face="Arial"><a href="../../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>

