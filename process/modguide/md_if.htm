<!-- RPW META DATA START --
 
 


-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Guidelines:&nbsp;Interface</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Guidelines:&nbsp;<rpw name="PresentationName">Interface</rpw><a name="Topics"></a></h2>

<h5>Topics</h5>
<ul>
  <li><a href="#Naming Interfaces">Naming Interfaces</a></li>
  <li><a href="#Describing Interfaces">Describing Interfaces</a></li>
  <li><a href="#Defining Operations">Defining Operations</a></li>
  <li><a href="#Documenting Interfaces">Documenting Interfaces</a></li>
  <li><a href="#Hints and Tips">Hints and Tips</a></li>
</ul>
<h3><a name="XE_interface__naming"></a><a name="Naming Interfaces">Naming
Interfaces </a><a href="#Topics"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<ul>
  <li>Name the interface to reflect the role it plays in the system.</li>
  <li>The name should be short, 1-2 words.</li>
  <li>Don't include the word &quot;<b>interface</b>&quot; in the name;
    it is implied by the type of model element (e.g. <b>interface</b>)</li>
</ul>
<h3><a name="XE_interface__describing"></a><a name="Describing Interfaces">Describing
Interfaces</a> <a href="#Topics"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<ul>
  <li>The description should convey the responsibilities of the interface.</li>
  <li>The description should be several sentences long, up to a short paragraph.</li>
  <li>The description should not simply restate the name of the interface, it
    should illuminate the role the interface plays in the system.</li>
</ul>
<h3><a name="XE_interface__defining_operations"></a><a name="Defining Operations">Defining
Operations</a> <a href="#Topics"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<ul>
  <li>Operation names should reflect the result of the operation.</li>
  <li>When an operation <b>sets</b> or <b>gets</b>
    information, including <b>set </b>or <b>get</b> in the
    name of the operation is redundant. Give the operation the same name as the
    property of the model element that is being set or retrieved. An operation
    thusly named, without parameters, retrieves the property; an operation
    thusly named <b>with</b> a parameter <b>sets</b> the
    property.</li>
</ul>
<p class="exampleheading">Example</p>
<p class="example"><b>name()</b> returns the name of the object; <b>name(aString)</b>
sets the name of the object to <b>aString</b>.
<ul>
  <li>The description of the operation should describe <b>what</b> the
    operation does, including any key algorithms, and <b>what value </b>it
    returns.</li>
  <li>Name the parameters of the operation to indicate what information is being
    passed to the operation.</li>
  <li>Identify the <b>type</b> of the parameter.</li>
</ul>
<h3><a name="XE_interface__documenting"></a><a name="Documenting Interfaces">Documenting
Interfaces</a> <a href="#Topics"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>The behavior defined by the Interface is specified as a set of Operations.
Additional information may need to be conveyed:
<ul>
  <li>How the operations are used, and the order in which they are performed
    (illustrated by example sequence diagrams).</li>
  <li>The possible externally-observable states a model element which realizes
    the interface may be in (illustrated by a state machine, see <a href="md_stadm.htm">Guidelines:
    Statechart Diagram</a>).</li>
  <li>Test plans and scripts which test the behavior of any model element which
    realizes the interface.</li>
</ul>
<p>In order to group and manage this information, a package should be created to
contain the interface and all related artifacts.</p>
<h3><a name="Hints and Tips">Hints and Tips</a> <a href="#Topics"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>Every interface represents a 'seam' in the system: a place at which the
system can be &quot;pulled apart&quot; and rebuilt or redesigned. Interfaces
represent the separation of specification from design or implementation. Well
structured interfaces:
<ul>
  <li>are simple yet complete, providing all necessary operations, yet
    sufficient to specify a single service</li>
  <li>are understandable, providing sufficient information to both use and
    realize the interface without having to examine an existing usage or
    implementation</li>
  <li>are approachable, providing information to guide the user to its key
    properties without being overwhelmed by the details of the operations</li>
</ul>
<p>When you draw an interface,
<ul>
  <li>use the &quot;lollipop&quot; notation whenever you need to simply specify 
    the presence of a seam in the system. Most often, you'll need this for subsystems 
    but not classes.</li>
  <li>Use the expanded &quot;class&quot; notation when you need to present the
    details of service itself. Most often, you'll need this for specifying the
    services offered by a package or subsystem.</li>
</ul>
<br>
<br>

 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>