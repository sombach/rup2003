<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->

<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Tool Mentor:&nbsp;Displaying Artifacts Related to Specific Objects on a Diagram Using Rational ProjectConsole</title>
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Displaying Artifacts Related to Specific Objects on a Diagram Using Rational ProjectConsole</rpw><a name="Top"></a>
</h2>
<h3>Purpose</h3>
<p>This tool mentor describes how to use Rational ProjectConsole to navigate to
particular artifacts from a diagram displayed by Rational ProjectConsole.</p>

<br>
  <ul>
<li><a href="../../process/activity/ac_ckino.htm">Make Changes</a></li>
<li><a href="../../process/activity/ac_cndrvw.htm">Conduct Review</a></li>
</ul>
<br>
   
</p>

<h3>Overview</h3>
<p>ProjectConsole can display graphics as well as text.<span style="mso-spacerun: yes">
</span>In cases where an artifact diagram is displayed, the diagram can be used
to instantly navigate to a Web page created for an item displayed in the
diagram.<span style="mso-spacerun: yes"> </span>For example, a model diagram may
show a number of packages or use cases in graphics form.<span style="mso-spacerun: yes"> </span>This
tool mentor demonstrates that by clicking on any item, e.g., package or use case, displayed on the graphic,
the artifact’s page is displayed.</p>
<p>ProjectConsole capitalizes on Java applet technologies to provide you with 
  familiar and multiple forms of navigation.<span style="mso-spacerun: yes">&nbsp; 
  </span>If you click directly on the text of a tree control node, the artifact 
  page associated with that node is displayed<span style="mso-spacerun: yes">. 
  </span>If you expand a tree control node by clicking on the node’s plus-sign, 
  then hyperlinks that would be displayed by clicking on the text of the node 
  are displayed as child nodes, from which you can continue navigating.</p>
<p>This tool mentor is applicable when using Microsoft Internet Explorer (release 
  5.5 or greater) or Netscape (release 7.0 or later).</p>
<h3>Tool Steps<o:p>
</o:p>
</h3>
<p>To display artifacts related to specific objects on a diagram using ProjectConsole:</p>
<ol>
  <li>Launch a browser.</li>
  <li>Enter the URL for your installation's ProjectConsole site. The URL can be 
    obtained by contacting your ProjectConsole administrator. The ProjectConsole 
    logon screen is displayed.</li>
  <li>Enter a valid user id and password on this logon screen. The ProjectConsole 
    artifact browser is displayed.</li>
  <li>Expand the following nodes:  <b>ProjectConsole</b>, <b>ClassicsCD.com Projects</b>, 
    <b>Point of Sale (POS)</b>, <b>Functional Teams</b>, <b>Development</b>, <b>Release 1.0</b>, 
    <b>Iteration 1</b>, <b>Design - Current View</b></li>
  <li>Click on the <b>Use-Case View</b> hyperlink located in the right frame of 
    ProjectConsole. At this point, the Use-Case View artifact template is displayed 
    and is fully populated with Use-Case View information.</li>
  <li>Click on a graphic in the Use-Case View to display its artifact page. For example, click on
    the <b>Point of Sale</b> package to display the contents of the Point of Sale package.</li>
  <li>Clicking on any of the elements on the artifact page navigates to additional 
    model information. For example, clicking on the <b>User Verification</b> use case displays 
    the artifact page containing information about the User Verification use case within the
    Point of Sale package.</li>
</ol>
<p><b>Note</b>: The reports displayed by ProjectConsole are sample templates created using the Rational ProjectConsole
Template Builder, and the published charts are created within the ProjectConsole Dashboard.</p>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>

