<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<html>

<head>
<title>Tool Mentor:&nbsp;Managing Dependencies Using Rational XDE Developer - .NET Edition and Rational RequisitePro</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<script language="JavaScript" SRC="online_help_link.js"></script>

</head>

<body>



 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

  
<h2 class="banner">Tool Mentor: <rpw name="PresentationName">Managing Dependencies 
  Using Rational XDE Developer - .NET Edition and Rational RequisitePro</rpw><a name="Top"></a> 
</h2>

<h3>Purpose</h3>

<p>This tool mentor provides tool-specific guidance for the following RUP activity:<br>
   </p>
<p>The steps in this tool mentor match those in the activity.  Links to topics in XDE online help are marked with <img src="../../images/helpbook.gif" width="16" height="16">.
<h3>Overview</h3>
<p>This tool mentor assumes that the RequisitePro-XDE integration has been used 
  to detail requirements as described in <a href="tm_desuc.htm">Tool Mentor: Detailing 
  a Use Case Using Rational XDE</a>.
<p>The following are the steps for this tool mentor: 
<ul>
  <li><a href="#Organize Requirements">Organize Requirements</a></li>
  <li><a href="#Assign_attributes">Assign Attributes</a></li>
  <li><a href="#Establish and Verify Traceability">Establish and Verify Traceability</a></li>
  <li><a href="#managing_changing_requirements">Manage Changing Requirements</a></li>
</ul>
<h3><a name="Organize Requirements">Organize Requirements</a><a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a> 
</h3>
<p>RequisitePro is the primary tool for organizing requirements. XDE is the primary 
  tool for organizing model elements. You should organize your requirements according 
  to your Requirements Management Plan prior to creating associations between 
  model elements and requirements.</p>
<p>For more information on organizing your requirements, see <a href="../reqpro/tm_mgdep.htm">Tool 
  Mentor: Managing Dependencies Using Rational RequisitePro</a>. <br>
</p>

<h3><a name="Assign_attributes">Assign Attributes</a><a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>For information on assigning attributes to requirements, see <a href="../reqpro/tm_mgdep.htm">Tool 
  Mentor: Managing Dependencies Using Rational RequisitePro</a>. <br>
</p>
 
<h3><a name="Establish and Verify Traceability">Establish and Verify Traceability</a><a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>To establish traceability between an XDE model element and a RequisitePro requirement, 
  create a requirement from a model element, then use RequisitePro to establish 
  and verify traceability between the requirement and other requirements.</p>
<p>The most useful model element types to associate with requirements include 
  class, package, subsystem and actor. Because managing traceability links has 
  a cost, we recommend you trace requirements to the highest level of abstraction 
  in your design, to quickly detect what part of your design is affected by requirement 
  change. Although the integration allows you to trace to detailed design element 
  (such as attributes and operations), you should balance the value of detecting 
  requirement change impact to design with the time spent managing traceability 
  links.</p>
<p>To learn how to create traceability requirements, see &quot;Creating traceability 
  requirements from model elements&quot; in the integration Help. This is accessed 
  from the top menu bar by clicking <i>Tools &gt; Rational RequisitePro &gt; Integration 
  Help</i>.</p>
<p>Note that you can assign attributes to a traceability requirement as you would 
  any other RequisitePro requirement.</p>
<h3><a name="managing_changing_requirements">Manage Changing Requirements</a> 
  <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a>&nbsp;</h3>
<p>Requirement changes are managed in accordance with the Requirements Management 
  Plan.&nbsp; Some additional guidelines are as follows:</p>
<h4>Re-assess Requirements Attributes and Traceability</h4>
<p>Even if a requirement hasn't changed, the attributes and traceability associated 
  with a requirement can change.&nbsp; The system analyst is responsible for maintaining 
  this information on an ongoing basis.</p>
<h4>Manage Change Hierarchically</h4>
<p>A change to one requirement may have a &quot;ripple effect&quot; that impacts 
  other related requirements, design, or other artifacts.&nbsp; To manage this 
  effect, you should change the requirements from the top down.&nbsp; Review the 
  impact on the Vision, then more detailed requirements (use cases and supplementary 
  requirements), and then the design, test, and end-user materials. To manage 
  the impact of requirements change on these elements, consider using traceability 
  reports.<br>
  <br>
</p>
  
<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>   

</body>

</html>
