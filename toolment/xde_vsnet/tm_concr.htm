<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<html>

<head>
<title>Tool Mentor:&nbsp;Describing the Run-time Architecture Using Rational XDE Developer - .NET Edition</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<script language="JavaScript" SRC="online_help_link.js"></script>

</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 




<h2 class="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Describing the
  Run-time Architecture Using Rational XDE Developer - .NET Edition</rpw><a name="Top"></a></h2>


<h3>Purpose</h3>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_concr.htm">Describe the Run-time Architecture</a></li>
</ul>
<br>
  
</p>

<p>The steps in this tool mentor match those in the activity. Links to topics
  in the Rational XDE&#153; online Help are marked with <img src="../../images/helpbook.gif" width="16" height="16">.</p>


<h3>Overview</h3>

<p> This tool mentor assumes that the basic structure of the Design Model has
  been set up according to the steps outlined in <a href="tm_arcan.htm">Tool Mentor:
  Performing Architectural Analysis Using Rational XDE</a>. </p>

<p>The following steps are performed in this tool mentor:</p>

<ul>
  <li><a href="#Analyze Concurrency Requirements">Analyze Concurrency Requirements</a></li>
  <li><a href="#IdentifyProcessesAndThreads">Identify Processes and Threads</a></li>
  <li><a href="#Identify Process Lifecycles">Identify Process Lifecycles</a></li>
  <li><a href="#Identify Inter-Process Communication Mechanisms">Identify Inter-Process
    Communication Mechanisms</a></li>
  <li><a href="#Allocate Inter-Process Coordination Resources">Allocate Inter-Process
    Coordination Resources</a></li>
  <li><a href="#Map Processes onto the Implementation Environment">Map Processes
    onto the Implementation Environment</a></li>

<li><a href="#Map Design Elements To Threads of Control">Map Design Elements to
  Threads of Control</a></li>
</ul>



<h3><a name="Analyze Concurrency Requirements">Analyze Concurrency
Requirements</a><a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>There is no Rational XDE specific guidance for this step.
</p>


<h3><a name="IdentifyProcessesAndThreads">Identify Processes and Threads </a>
  <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>If there is application concurrency, then you must identify threads of control,
  which are shown as active classes.</p>

<ol>
  <li>Identify the package in which the active class belongs. Navigate to that
    package.
  </li>
  <li>Add the active class to a class diagram. See
    <script language=javascript>ReferenceHelpTopic("Adding Shapes to Diagrams","rs","rs_t_add_shp_dgm");</script>.
  </li>
  <li>Mark the class as active. See
    <script language=javascript>ReferenceHelpTopic("Making Classes or Objects Active","rs","rs_t_mak_obj_act");</script>.
    </li>
  <li>Navigate to the use-case realization that requires this active class.
  </li>
  <li>Illustrate complex inter-process and inter-thread communication using sequence
    diagrams. For guidance on creating sequence diagrams as part of use-case realizations,
    see <a href="tm_ucdes.htm">Tool Mentor: Designing Use-Cases Using Rational
    XDE&#153;</a>.
  </li>
  <li>Specify the type of concurrency for operations. See
    <script language=javascript>ReferenceHelpTopic("Specifying the Type of Concurrency for Operations","rs","rs_t_spec_type_cncrrncy_op");</script>.
  </li>
</ol>

<!-- begin - wsw -->

<!-- end - wsw -->


<h3><a name="Identify Process Lifecycles">Identify Process Lifecycles</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>Add sequence diagrams to represent process and thread lifecycles. Each process
  or thread must appear in the sequence diagrams that create and destroy it. For
  guidance related to creating sequence diagrams, see <a href="tm_ucdes.htm">Tool
  Mentor: Designing Use-Cases Using Rational XDE</a>. </p>


<h3><a name="Identify Inter-Process Communication Mechanisms">Identify Inter-Process
  Communication Mechanisms</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>There is no Rational XDE specific guidance for this step. </p>


<h3><a name="Allocate Inter-Process Coordination Resources">Allocate Inter-Process
  Coordination Resources</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>There is no Rational XDE specific guidance for this step.</p>


<h3><a name="Map Processes onto the Implementation Environment">Map Processes
  onto the Implementation Environment</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>There is no Rational XDE specific guidance for this step.</p>


<h3><a name="Map Design Elements To Threads of Control">Map Design Elements to
  Threads of Control</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p> Use aggregation relationships to show the composition of the active classes
  and to show non-active classes that execute under the control of the active
  classes.</p>

<ol>
  <li>Navigate to the Design Model package that contains the Process View. See
    <a href="model_structure_guidelines.htm">Rational XDE Model Structure Guidelines</a>.
  </li>
  <li>Add a class diagram to this package. See
    <script language=javascript>ReferenceHelpTopic("Adding Diagrams","rs","rs_t_add_dgm");</script>.
  </li>
  <li>Drag and drop the active classes, along with the significant design classes
    that are under the control of these active classes, onto the class diagram.
    See
    <script language=javascript>ReferenceHelpTopic("Adding Shapes to Diagrams","rs","rs_t_add_shp_dgm");</script>.
  </li>
  <li> Add association relationships. See
    <script language=javascript>ReferenceHelpTopic("Adding Association Relationships","rs","rs_t_add_assoc_rels");</script>.
  </li>
  <li>Specify aggregation. See
    <script language=javascript>ReferenceHelpTopic("Specifying Kinds of Association Relationships","rs","rs_t_spec_kinds_assoc");</script>.
  </li>
</ol>

<p> For more information, refer to
  <script language=javascript>ReferenceHelpTopic("Working with Class Diagrams","rs","rs_o_work_w_class_dgms");</script>
  in the Rational XDE online Help.
</p>




<p><br>
   </p>
<p> 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 
</body>

</html>

