<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Tool Mentor:&nbsp;Creating a Test Plan Using Rational TestManager</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Creating a Test 
  Plan Using Rational TestManager</rpw><a name="Top"></a> </h2>

<h3>Purpose</h3>

<p>This tool mentor describes how to use Rational TestManager to create a Test Plan.</p>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_tst_dfntstapr.htm">Define Test Approach</a></li>
<li><a href="../../process/activity/ac_tst_idntstmtv.htm">Identify Test Motivators</a></li>
<li><a href="../../process/activity/ac_tst_idntstitm.htm">Identify Targets of Test</a></li>
<li><a href="../../process/activity/ac_tst_dfntstenvcnf.htm">Define Test Environment Configurations</a></li>
</ul>
<br>
   
</p>
 
<ul>
  <li>  <a href="../testmgr/tm_tstcs.htm">Tool
Mentor: Creating a Test Case Using Rational TestManager</a></li>
  <li>  <a href="../../process/artifact/ar_tstpl.htm">Artifact: Test Plan</a></li>
  <li>  <a href="../../process/modguide\md_tstpl.htm">Guidelines: Test Plan</a></li>
  <li>  <a href="../../process/workflow/test/wfs_dfnevlmsn.htm">Workflow Detail: Plan Test</a></li>
</ul><p> </p>
<h3>Overview</h3>

<p>This tool mentor applies to Windows 98/ME/XP/2000 and NT 4.0 platforms.</p>
<p>A Test Plan is an evolving collection of information&nbsp;organized by TestManager. It represents&nbsp;<br>
agreement and insight into what to test and when. A project can have multiple
Test Plans representing&nbsp;<br>
different phases or aspects of a test effort.&nbsp; Organize Test Plans around
feature sets, functionality, types&nbsp;<br>
of testing, or even across the names of the members of your team.</p>
<p>Each Test Plan can contain multiple test case folders and test cases. A test
plan defines all key test&nbsp;<br>
elements as represented by the hierarchy of test case folders and test cases.</p>

<h4>Tool Steps</h4>

<p>To create a test plan, perform the following steps:</p>
<ol type="n">
  <li><a href="#Create a Test Plan">Create a Test Plan</a>
  <li><a href="#Set Test Plan Properties">Set the Test Plan properties</a></li>
</ol>

<h3>1. <a name="Create a Test Plan">Create a Test Plan</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<ol>
  <li>From the <b>Planning </b>tab of the Test Asset Workspace, right-click<b>
    Test Plan</b> and then click <b>New Test Plan.</b><br>
    The name of the test plan is the only required field. Name your test plan
    according to the type of testing; for example, Functional Tests.&nbsp;</li>
  <li>At the<b> Name</b> field, input the appropriate name for your test plan.
    Click <b>OK.</b></li>
</ol>
<p><img src="../../images/HelpBook.gif" alt="Help icon" width="16" height="16">&nbsp;&nbsp; Refer to the
following topics in the TestManager online Help:</p>
<ul>
  <li><i>Test Planning</i> (Index: test planning)</li>
  <li><i>Test Plans</i> (Index: test plans &gt; creating)</li>
</ul>
<h3>2. <a name="Set Test Plan Properties">Set the Test Plan properties</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

In addition to assigning a test plan name, you can assign other properties as
the test plan evolves. For example, you can assign a test plan owner, add
pointers to external documents, and specify the configurations and iterations
associated with the test plan. Test planning happens over time. A test plan is
an evolving asset that is defined iteratively. A test plan has many properties:
<ul>
  <li>The <b>description</b> of the test plan &#151 Use this field to describe the
    scope of the test plan; for example, &quot;Covers all primary usage
    scenarios&quot;.&nbsp;<br>
  <li>The <b>owner</b> of the test plan &#151 Assign ownership of test plans to
    structure your team and ensure that test plans are emerging assets with
    someone honing the elements.<br>
  <li>The <b>configurations</b> associated with the test plan &#151 Specify the
    hardware and software configurations on which the test plan needs to be
    executed to verify proper behavior of the target of test.<br>
  <li>The <b>iterations</b> associated with the test plan &#151 Assign milestones
    in your project's lifecycle&nbsp;that define when you want specific portions
    (sets of test cases) of the test plan executed. This gives you insight into
    the scheduling within your test plans.<br>
  <li>The <b>external documents</b> associated with the test plan &#151 External
    documents may contain listings of the following:
    <ul>
      <li>resource constraints&#151time, budget, bodies, skill sets
      <li>testing strategies that outline the types of testing to be done&#151function, performance, reliability
      <li>implementation of the testing strategy including automated and manual
        testing as well as to the current toolset
      <li>scope of the project
      <li>duration of the project
      <li>anticipated schedule
      <li>definition of quality for the project
      <li>deliverables
      <li>definition of the project's metrics</li>
    </ul>
  </li>
</ul>
<p><img src="../../images/HelpBook.gif" alt="Help icon" width="16" height="16">&nbsp;&nbsp; Refer to the
following topics  in the TestManager online Help:</p>
<ul>
  <li><i>Associating a Configuration with a Test Plan</i> (Contents: Planning
    Tests)</li>
  <li><i>Associating an Iteration with a Test Plan</i> (Contents: Planning
    Tests)</li>
  <li><i>Designing Tests</i> (Contents: Planning Tests)</li>
</ul>

<p>
<br>
<br>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</p>

</body>

</html>

