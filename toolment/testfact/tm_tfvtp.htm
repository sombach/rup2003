<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<html>

<head>
<link rel="StyleSheet" href="../../rop.css" type="text/css">
<title>Tool Mentor:&nbsp;Viewing Logs and Evaluating the Execute Test Suite Using the Rational TestManager</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 


<h2 class="banner"><a name="Top"></a>Tool Mentor:&nbsp;<rpw name="PresentationName">Viewing 
  Logs and Evaluating the Execute Test Suite Using the Rational TestManager</rpw> 
</h2>

<h3>Purpose</h3>
<p>This tool mentor describes how to use Rational TestManager, Rational Robot 
  and Rational TestFactory to analyze automatically generated Test Scripts that 
  uncovered errors.</p>

<p>Related Rational Unified Process information: </p>
<ul>
  <li><a href="../../process/activity/ac_tst_exctstste.htm">Activity: Execute Test Suite</a>
  </li>
</ul>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_tst_anltstflr.htm">Analyze Test Failure</a></li>
<li><a href="../../process/activity/ac_tst_dtrtstrsl.htm">Determine Test Results</a></li>
<li><a href="../../process/activity/ac_anlrntbhv.htm">Analyze Runtime Behavior</a></li>
</ul>
<br>
   
</p>

<h3>Overview</h3>

<p>This tool mentor is applicable when running Windows 98/2000/NT 4.0.</p>

<p>To use Rational TestFactory, Rational Robot, and Rational TestManager to analyze the
automatically generated test scripts, do one or both of the following: 

<ul>
  <li><a href="#Analyze defect script">Analyze a Test Script  that uncovered a defect</a></li>
  <li><a href="#Analyze UAW script">Analyze a Test Script  that uncovered an unexpected active
    window</a></li>
</ul>

<h3>1.&nbsp; <a name="Analyze defect script">Analyze a Test Script  that uncovered a defect</a>
<a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>As described in <a href="tm_tfgen.htm">Tool Mentor: Implementing Generating 
  Test Scripts Using Rational Test Factory</a>, a Pilot is the Rational TestFactory 
  tool that automatically generates Test Script. For each defect it encounters 
  while it is running, a Pilot generates a &#147;defect script,&#148; which contains 
  the Test Script statements that cause the defect to occur.</p>

<p>When a Pilot finds defects during the run, the Test Script that uncovered defects 
  are located in a separate &#147;Defects Found&#148; subfolder under the run 
  folder. You can use Rational TestManager to view the run log for the Test Script 
  that uncovered defects.</p>

<p><img src="../../images/HelpBook.gif" alt="Help icon" width="16" height="16">&nbsp;Refer
to the <i>View the log for a script run </i>topic in Rational TestFactory online
Help.</p>

<h3>2.&nbsp; <a name="Analyze UAW script">Analyze a Test Script that uncovered 
  an unexpected&nbsp;active window</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>

<p>During Test Script generation, a Pilot can encounter an &#147;unexpected active 
  window&#148; (UAW)&#151;a window that reflects an inconsistency between the 
  UI objects in the application map and the controls in the application-under-test 
  (AUT). One of two conditions can cause the Pilot to encounter an unexpected 
  active window: 
<ul>
  <li>The AUT contains a window for which there is no corresponding UI object in the
    application map. A typical example of this condition is a message window that is not
    uncovered during mapping.</li>
  <li>A UI object in the application map represents a window that is no longer in the AUT.</li>
</ul>

<p>Whenever it encounters an unexpected active window, the Pilot generates a &#147;UAW
script&#148; and places it in the Pilot run folder. You can play back a UAW script in
Rational Robot, and then use Robot and Rational TestManager to determine the cause of the
unexpected active window. After you resolve the cause in Rational TestFactory, subsequent
Pilot runs will not encounter the unexpected active window.</p>

<p><img src="../../images/HelpBook.gif" alt="Help icon" width="16" height="16">&nbsp;Refer
to the following topics in Rational TestFactory online Help: 

<ul>
  <li><i>Find the cause of an unexpected active window</i></li>
  <li><i>Resolve an unexpected active window</i></li>
</ul>
<br>
<br>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 
</body>

</html>

