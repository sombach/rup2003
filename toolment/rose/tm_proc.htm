<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<HTML>
 <HEAD>
  <title>Tool Mentor:&nbsp;Documenting the Process View Using Rational Rose</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <LINK REL="StyleSheet" HREF="../../rop.css" TYPE="text/css">
</HEAD>
 <BODY>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<H2 CLASS="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Documenting the Process View Using Rational Rose</rpw><A NAME="Top" msnavigation></A>
</H2>
      <H3>
       Purpose</H3>
      <P>
       This tool mentor describes how to represent the Process View and 
       related artifacts in Rational Rose.</P>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_concr.htm">Describe the Run-time Architecture</a></li>
</ul>
<br>
   
</p>

<H3>Overview</H3>
      <P>
       The following is a summary of steps that you perform to manage the 
       Process View:</P>
      <OL>
       <LI CLASS="mvd-P">
       <P>
        <A HREF="tm_proc.htm#Creating the Process Model in the Rational Rose&#153; Logical View">Create
         the <b><SPAN STYLE="font-weight : normal;">Process View </SPAN></b>in
         the <b><SPAN STYLE="font-weight : normal;">Logical View</SPAN></b></a>
        <LI CLASS="mvd-P"><A HREF="tm_proc.htm#Representing Processes using 'Active Classes' in the Process Model">Represent
          processes using 'Active Classes' in the Process Model</a>
        <LI CLASS="mvd-P"><A HREF="tm_proc.htm#Representing Process and Thread Life-cycles">Represent
          process and thread lifecycles</a>
        <LI CLASS="mvd-P"><A HREF="tm_proc.htm#Allocating Classes to Processes and Threads">Allocate
          classes to processes and threads</a>
       </OL>
      <H3>
       1. <A NAME="Creating the Process Model in the Rational Rose&#153; Logical View"></a>Create
        the <b>Process View</b> in the <b>Logical View </b><A HREF="tm_proc.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       You represent the Process View by creating a package within the 
       Logical View and naming it &quot;Process View&quot;.</P>
      <H3>
       2. <A NAME="Representing Processes using 'Active Classes' in the Process Model"></a>Represent
        Processes Using 'Active Classes' in the Process&nbsp;<br>
 Model <A HREF="tm_proc.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       The UML represents processes and threads as <b>Active Classes</b> 
       in the Process View. You create an active class in the Process View 
       by creating a class and assigning it a stereotype of either 
       &lt;process&gt; or &lt;thread&gt;.</P>
      <H3>
       3. <A NAME="Representing Process and Thread Life-cycles"></a>Represent
       process and thread lifecycles <A HREF="tm_proc.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       You use Sequence Diagrams to represent process and thread lifecycles. Each process or thread should appear in the sequence 
       diagrams that create and destroy it. In addition, it is useful to 
       illustrate complex inter-process and inter-thread communication using 
       additional sequence diagrams. These sequence diagrams should be 
       organized with the Use Case Realization in which the behavior occurs.</P>
      <P>
       When you create your sequence diagrams and the objects in them, 
       consider a labeling convention where you show the initiator of the 
       first message as the interface itself.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information about sequence diagrams, see the <SPAN STYLE="font-style : italic;">Sequence
        Diagrams (Overview)</SPAN> topic in the Rational Rose online help.</P>
      <H3>
       4. <A NAME="Allocating Classes to Processes and Threads"></a>Allocating
       classes to processes and threads <A HREF="tm_proc.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       Classes and subsystems may be allocated to one or more processes and 
       threads. Processes and threads are composed-of instances of classes 
       and subsystems. To show this allocation, you create class diagrams 
       that model the processes and threads as active classes. Use 
       aggregation relationships to show the composition of the active 
       classes. When you create the aggregation relationships, use the 
       Aggregation Specification to set the By Value containment for Role A.</P>
<script language="JavaScript">
<!--
function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    if(window.name=="ory_doc")
    {
      window.name = "xyz1234";
    }
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
       top.location = new_ory_doc_loc;
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->
</script>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>

