<!-- RPW META DATA START --

 
 
-- RPW META DATA END -->
<HTML>
 <HEAD>
  <title>Tool Mentor:&nbsp;Managing Sequence Diagrams Using Rational Rose</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <LINK REL="StyleSheet" HREF="../../rop.css" TYPE="text/css">
</HEAD>
 <BODY>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<H2 CLASS="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Managing Sequence Diagrams Using Rational Rose</rpw><A NAME="Top" msnavigation></A>
</H2>
      <H3>
       Purpose</H3>
      <P>
       This tool mentor describes how to use Rational Rose to create 
       sequence diagrams that show the interactions between objects.</P>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_ucana.htm">Use-Case Analysis</a></li>
<li><a href="../../process/activity/ac_ucdes.htm">Use-Case Design</a></li>
</ul>
<br>
   
</p>

<H3>
       Overview</H3>
      <P>
       The following is a summary of the steps you perform to use sequence 
       diagrams to describe the interactions between objects:</P>
      <OL>
       <LI CLASS="mvd-P">
       <P>
        <A HREF="tm_ucds1.htm#Step1">Create a sequence diagram under the
        Use-Case Realization</a>
        <LI CLASS="mvd-P"><A HREF="tm_ucds1.htm#Step2">Place the 
        participating objects and actors in the sequence diagram</a>
        <LI CLASS="mvd-P"><A HREF="tm_ucds1.htm#Step3">Describe the messages
          between the objects</a>
        <LI CLASS="mvd-P"><A HREF="tm_ucds1.htm#Step4">Describe what an 
        object does when it receives a message</a>
       </OL>
      <P>
       For more details about sequence diagrams, see:</P>
      <UL>
       <LI CLASS="mvd-P">
       <P>
        <SPAN STYLE="font-style : italic;"><IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
        Sequence
         Diagrams (Overview) </SPAN>topic in the Rational Rose online help.
        <LI CLASS="mvd-P"><IMG SRC="../../images/Book.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="15">
          <SPAN STYLE="font-style : italic;">Chapter
         4, Introduction to Diagrams </SPAN><SPAN STYLE="font-style : normal;">and</SPAN><SPAN STYLE="font-style : italic;"> 
        Chapter 9, Interaction Diagrams and Specifications</SPAN> in the <SPAN STYLE="font-style : italic;">Using
          Rational Rose</SPAN> manual.
       </UL>
      <H3>
       1. <A NAME="Step1"></a>Create a sequence diagram under the Use-Case 
       Realization <A HREF="tm_ucds1.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       When you create a sequence diagram for a use case realization, 
       consider naming the diagram &quot;&lt;use-case name&gt; - &lt;flow 
       type&gt;&quot;. This naming convention simplifies future tracing of 
       objects to the use-case realization that they participate in. Also, 
       use the documentation window to enter a brief description of the 
       scenario that the sequence diagram depicts.</P>
      <H3>
       2. <A NAME="Step2"></a>Place the participating objects and actors in 
       the sequence&nbsp;<br>
       diagram <A HREF="tm_ucds1.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       One of the primary elements of a sequence diagram is an object. An 
       object has state, behavior, and identity. The structure and behavior 
       of similar objects are defined in their common class. Each object in 
       a diagram indicates some instance of a class. An object that is not 
       named is referred to as a class instance. In this step, you:</P>
      <UL>
       <LI CLASS="mvd-P">
       <P>
        Drag and drop actors onto the sequence diagram.
        <LI CLASS="mvd-P">Add objects to the diagram and identify the classes to which the objects belong.
       </UL>
      <H3>
       3. <A NAME="Step3"></a>Describe the messages between the objects <A HREF="tm_ucds1.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       A message represents the communication between actors and objects, 
       indicating that an action will follow. It carries information from 
       the source focus of control to the destination focus of control. In a 
       sequence diagram a message icon represents exactly one message. When 
       you create a message, use the documentation field in the Message 
       Specification to describe the message.</P>
      <H3>
       4. <A NAME="Step4"></a>Describe what an object does when it receives 
       a message <A HREF="tm_ucds1.htm#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       To enhance a message, you can attach a script to it. Use the Text Box 
       symbol in the sequence diagram toolbar.</P>
      <P>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>

