<!-- RPW META DATA START --
 
 

-- RPW META DATA END -->

<html>
<head>
<title>Tool Mentor:&nbsp;Detailing a Business Use Case Using Rational Rose</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="StyleSheet" href="../../rop.css" type="text/css">
</head>

<body>

 
<table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top">

<script language="JavaScript">
<!--

//Tell the TreePath to update itself
var thePath = "";
var type = typeof parent.ory_button;
if (type != "undefined") {
	 type = typeof parent.ory_button.getTreePath();
	 if (type != "undefined") {
	 	 thePath = parent.ory_button.getTreePath();
	 }
}
document.write(thePath);
-->
</script>

 



<h2 class="banner">Tool Mentor:&nbsp;<rpw name="PresentationName">Detailing a Business Use Case Using Rational Rose</rpw><a NAME="Top" msnavigation></a></h2>

<h3>Purpose</h3>

<p>This tool mentor describes the steps for describing a business use case using activity diagrams in Rational Rose.</p>

<p>This section provides links to additional information related to this tool mentor.<br>
  <ul>
<li><a href="../../process/activity/ac_debuc.htm">Detail a Business Use Case</a></li>
</ul>
<br>
   
</p>

<h3>Overview</h3>
<p>This is a summary of the steps you follow to create an activity diagram in a business use-case model:</p>
<OL>
       <LI CLASS="mvd-P">
       <P>
        <A HREF="#Create an Activity Diagram in a Business Use Case">Create 
        an activity diagram in a business use case</a>
        <LI CLASS="mvd-P"><A HREF="#Create Swimlanes (Optional)">Create 
        swimlanes (optional)</a>
        <LI CLASS="mvd-P"><A HREF="#Create and Describe an Activity State in the Diagram">Create
         and describe an activity state in the diagram</a>
        <LI CLASS="mvd-P"><A HREF="#Connect Activity States with Transitions">Connect
         activity states with transitions</a>
        <LI CLASS="mvd-P"><A HREF="#Create Synchronization Bars">Create 
        synchronization bars</a>
        <LI CLASS="mvd-P"><a HREF="#Create Decisions with Guard Conditions">Create
         decisions with guard conditions</a>
        <LI CLASS="mvd-P"><a HREF="#Identify the supported business goals">Identify
          the supported business goals</a>
       </OL>
      <P>
       For detailed information on Activity Diagrams, see:</P>
      <UL>
       <LI CLASS="mvd-P">
       <P>
        <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16"><SPAN STYLE="font-style : italic;">How
         to &gt; Work with Activity Diagrams</SPAN> in the Rational Rose 
        online help
        <LI CLASS="mvd-P"><IMG SRC="../../images/Book.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="15"><SPAN STYLE="font-style : italic;">Chapter
         8, State Machine Diagrams and Specifications</SPAN> in the <SPAN STYLE="font-style : italic;">Using
          Rational Rose</SPAN> manual.
       </UL>
      <H3>
       1. <A NAME="Create an Activity Diagram in a Business Use Case"></a>Create
        an activity diagram in a business use case <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       Activity diagrams can be very effective in illustrating the workflow 
       of various events in a use-case diagram. The flow of events of a use 
       case describes what needs to be done by the system in order to 
       provide value to an actor. Also, use case diagrams present a high 
       level view of how the system is used as viewed from an outsider&#146;s
        (actor&#146;s) perspective. You can use activity diagrams to specify 
       and define each event in a use case diagram.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        complete details on how to create an activity diagram, see the <SPAN STYLE="font-style : italic;">Creating
        an Activity Diagram </SPAN>topic in the Rational Rose online help.</P>
      <H3>
       2. <A NAME="Create Swimlanes (Optional)"></a>Create swimlanes (optional) <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       Swimlanes are helpful when modeling a business workflow because they 
       can represent organizational units or roles within a business model. 
       Swimlanes are very similar to an object because they provide a way to 
       tell who is performing a certain role. You should place activities 
       within swimlanes to determine which unit is responsible for carrying 
       out a specific activity. When a swimlane is dragged onto an activity 
       diagram, it becomes a swimlane view. Swimlanes appear as small icons 
       in the browser while a swimlane views appear between the thin, 
       vertical lines with a header that can be renamed and relocated.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information on swimlanes, see the <SPAN STYLE="font-style : italic;">Swimlanes</SPAN> 
       topic in the Rational Rose online help.</P>
      <H3>
       3. <A NAME="Create and Describe an Activity State in the Diagram"></a>Create
        and describe an activity state in the diagram <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       An activity represents the performance of a task or duty in a 
       workflow. It may also represent the execution of a statement in a 
       procedure. An activity is similar to a state, but expresses the 
       intent that there is no significant waiting (for events) in an activity.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information on activities, see the <SPAN STYLE="font-style : italic;">Activity</SPAN> 
       topic in the Rational Rose online help.</P>
      <H3>
       4. <A NAME="Connect Activity States with Transitions"></a>Connect
       activity states with transitions <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       Transitions connect activities with other model elements. You can 
       create a transition between two activities or between an activity and 
       a state.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information on transitions, see the <SPAN STYLE="font-style : italic;">State
        Transition</SPAN> topic in the Rational Rose online help.</P>
      <H3>
       5. <A NAME="Create Synchronization Bars"></a>Create synchronization bars <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       Synchronizations enable you to see a simultaneous workflow in an 
       activity diagram. Synchronizations visually define forks and joins 
       representing parallel workflow.</P>
      <P>
       A fork construct is used to model a single flow of control that 
       divides into two or more separate, but simultaneous flows. Every fork 
       that appears on an activity diagram should ideally be accompanied by 
       a corresponding join. A join consists of two of more flows of control 
       that unite into a single flow of control. All model elements (such as 
       activities) that appear between a fork and join must complete before 
       the flow of controls can unite into one.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information on synchronization bars, see the <SPAN STYLE="font-style : italic;">Synchronizations</SPAN> 
       topic in the Rational Rose online help.</P>
      <H3>
       6. <A NAME="Create Decisions with Guard Conditions"></a>Create decisions with
       guard conditions <A HREF="#Top"><IMG SRC="../../images/top.gif" VSPACE="0" HSPACE="0" ALT="To top of page" BORDER="0" width="26" height="20"></a></H3>
      <P>
       A decision represents a specific location on an activity diagram 
       where the workflow may branch based upon guard conditions. There may 
       be more than two outgoing transitions with different guard 
       conditions, but for the most part, a decision will have only two 
       outgoing transitions determined by a Boolean expression. You can place 
       guard conditions on transitions to or from almost any element on an 
       activity diagram.</P>
      <P>
       <IMG SRC="../../images/HelpBook.gif" VSPACE="0" HSPACE="0" BORDER="0" width="16" height="16">
       For
        more information on decisions and guard conditions, see the <SPAN STYLE="font-style : italic;">Decisions</SPAN> 
       topic in the Rational Rose online help.</P>


<h3>7. <a name="Identify the supported business goals">Identify the supported
business goals</a> <a href="#Top"><img src="../../images/top.gif" alt="To top of page" border="0" width="26" height="20"></a></h3>
<p>To insert a supports dependency from a business use case to a business goal
in a use case diagram, do the following:
<ul>
  <li>Select the <b>Dependency </b>arrow from the toolbox in the class diagram
    editor.</li>
  <li>Position the cursor on the business use case in the use case diagram.
    Left-click and move the cursor to the business goal symbol and release.</li>
  <li>Double-click on the created dependency and select the &laquo;supports&raquo;
    stereotype in the Dependency Specification dialog box.</li>
  <li>Click <b>OK</b>.</li>
  <li>Right-click on the created dependency, and make sure that the Show
    Stereotype selection is checked in the shortcut menu.</li>
  <li>The stereotype label can be repositioned by dragging and dropping it in
    the diagram.</li>
</ul>
<p>&nbsp;</p>
      <P>&nbsp;
       </P>


      <P>&nbsp;
       </P>


 

<p>
 <font face="Arial"><a href="../../copyrite/copyrite.htm">
 <font size="-2">Copyright&nbsp;&copy;&nbsp;1987 - 2003 Rational Software Corporation</font>
 </a></font>
</p>


</td><td valign="top" width="24"></td><td valign="top" width="1%">
<p>
<a href="../../index.htm"></a>
</p>

<script language="JavaScript">
<!--

function loadTop()
{
  if(parent.frames.length!=0 && parent.frames[1].name=="ory_toc")
  {
     alert("The Rational Unified Process is already displayed using frames");
  }
  else
  {
    var expires = new Date();
    expires.setTime (expires.getTime() + (1000 * 20));
    document.cookie = "rup_ory_doc=" + escape (document.URL) +
    "; expires=" + expires.toUTCString() +  "; path=/";

    var new_ory_doc_loc = null;

    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href;
         break;
       }
    }

    if(new_ory_doc_loc!=null)
    {
	if( self.name == "ory_doc" )
	{
		window.close();
		window.open( new_ory_doc_loc );		
	}
	else
	{
	       	top.location = new_ory_doc_loc;
	}
    }
   }
}
// -->
</script>
<script language="JavaScript">
<!--
  function getImageUrl(image)
  {
    var new_ory_doc_loc=null;
    for(i=document.links.length-1;i>=0;i--)
    {
       if(document.links[i].href.indexOf("index.htm")!=-1)
       {
         new_ory_doc_loc = document.links[i].href.substring(0,document.links[i].href.lastIndexOf("/"));
         new_ory_doc_loc = new_ory_doc_loc + "" + image;
         return new_ory_doc_loc;
       }
    }
    return null;
  }
// -->
</script>
<script
language="JavaScript">
<!--
MSFPhover =
(((navigator.appName == "Netscape") &&
  (parseInt(navigator.appVersion) >= 3 )) ||
  ((navigator.appName == "Microsoft Internet Explorer") &&
  (parseInt(navigator.appVersion) >= 4 )));

  function MSFPpreload(img)
  {
     var a=new Image();
     a.src=img;
     return a;
  }
// -->
</script>
<script language="JavaScript">
<!--
    if(MSFPhover)
    {
        RupGray=MSFPpreload(getImageUrl('/images/rup1.gif'));
        RupBlue=MSFPpreload(getImageUrl('/images/rup1_a.gif'));
    }
// -->

//new code to display the load button or not
var ory_toc_exist = typeof parent.ory_toc;
if (ory_toc_exist == "undefined") {
	document.write("<a href=\"JavaScript:loadTop();\" onmouseover=\"if(MSFPhover) document['Home'].src=RupBlue.src; self.status='Display Rational Unified Process using frames'; return true\" onmouseout=\"if(MSFPhover) document['Home'].src=RupGray.src; self.status= ' ';return true\"> <br> <img src=\"../../images/rup1.gif");
	document.write("\"  border=\"0\" alt=\Display Rational Unified Process using frames\" name=\"Home\" width=\"26\" height=\"167\"></a>");
}
else {
	document.write("&nbsp;");
}

</script>
</td></tr></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td>
<p align="right"><font face="Arial"><small><small>Rational Unified
Process&nbsp;&nbsp; 
<img border="0" width="63" height="7" src="../../images/rupversion.gif">
</small></small></font>
</td></tr></table>
 

</body>

</html>

